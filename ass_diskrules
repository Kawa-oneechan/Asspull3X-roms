PATH		:= $(DEVKIT68K)/bin:$(PATH)
CROSS		:= m68k-elf-
CC		:= $(CROSS)gcc
AS		:= $(CROSS)gcc
LD		:= $(CROSS)gcc
OBJCOPY		:= $(CROSS)objcopy

export OFILES	:= $(SFILES:.s=.o) $(CFILES:.c=.o)

# --------------------------------------------------------------------
# OPTIONS
# --------------------------------------------------------------------

MAPFILE		:= $(TARGET).map

ARCH		:= -m68000
SPECS		:= -specs=asspull-disk.specs

INCLUDE		:= # -I toolinclude
LIBPATHS	:=

CFLAGS		:= $(INCLUDE) -Wall -fno-strict-aliasing -fomit-frame-pointer $(ARCH)
ASFLAGS		:= -x assembler-with-cpp -c $(ARCH) -Wall
LDFLAGS		:= $(ARCH) $(SPECS) $(LIBPATHS) $(LIBS)

LDFLAGS += -Wl,-Map $(MAPFILE) -nostartfiles 

# ---------------------------------------------------------------------
# RULES
# ---------------------------------------------------------------------

../_disk2_/$(TARGET).app : $(TARGET).elf
	$(OBJCOPY) -O binary $< $@
#	$(CROSS)objdump -d $(TARGET).elf > $(TARGET).txt

$(TARGET).elf : $(OFILES) $(AFILES) Makefile $(DEPENDFILE)
	@echo > $(MAPFILE)
	$(LD) -g -o $@ $(OFILES) $(AFILES) $(LDFLAGS)

.PHONY:	all clean

all:	clean $(TARGET).elf

clean:
	rm -f $(OFILES) $(MAPFILE) $(TARGET).elf ../_disk2_/$(TARGET).app

# --- ROM compilation ---
%.o : %.c
	$(CC) $(CFLAGS) -c $< -o $@

# --- Assembling ---
%.o : %.s
	$(AS) $(ASFLAGS) -c $< -o $@
