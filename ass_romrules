PATH	:= $(DEVKIT68K)/bin:$(PATH)
CROSS	:= m68k-elf-
CC	:= $(CROSS)gcc
AS	:= $(CROSS)gcc
LD	:= $(CROSS)gcc
OBJCOPY	:= $(CROSS)objcopy

export ROFILES	:= $(SFILES:.s=.o) $(CFILES:.c=.o)
export IOFILES	:= $(ICFILES:.c=.o)
export OFILES	:= $(ROFILES) $(IOFILES)

# --------------------------------------------------------------------
# OPTIONS
# --------------------------------------------------------------------

MAPFILE		:= $(TARGET).map

ARCH    := -m68000
RARCH   := -m68000
SPECS   := -specs=asspull.specs

INCLUDE		:= -I toolinclude
LIBPATHS	:=

CBASE   := $(INCLUDE) -Wall -Wextra -fno-strict-aliasing -fomit-frame-pointer
RCFLAGS := $(CBASE) $(RARCH)
CFLAGS  := $(RCFLAGS)

ASFLAGS := -x assembler-with-cpp -c -m68000 -Wall
LDFLAGS := $(ARCH) $(SPECS) $(LIBPATHS) $(LIBS)

LDFLAGS += -Wl,-Map $(MAPFILE) -nostartfiles

# ---------------------------------------------------------------------
# RULES
# ---------------------------------------------------------------------

../$(TARGET).ap3 : $(TARGET).elf
	$(OBJCOPY) -O binary $< $@
#	$(CROSS)objdump -d $(TARGET).elf > $(TARGET).txt
	../assfix ../$(TARGET).ap3

$(TARGET).elf : $(OFILES) $(AFILES) Makefile $(DEPENDFILE)
	@echo > $(MAPFILE)
	$(LD) -g -o $@ $(OFILES) $(AFILES) $(LDFLAGS)

.PHONY: all clean depend

all:    clean $(TARGET).elf

depend:
	$(CC) $(RCFLAGS) -M $(RCFILES) > $(DEPENDFILE)
	$(CC) $(ICFLAGS) -M $(ICFILES) > $(DEPENDFILE)

$(DEPENDFILE): 
	$(CC) $(RCFLAGS) -M $(CFILES) $(ICFLAGS) $(ICFILES) > $(DEPENDFILE)


# --- ROM compilation ---
%.o : %.c
	$(CC) $(RCFLAGS) -c $< -o $@

# --- Assembling ---
%.o : %.s
	$(AS) $(ASFLAGS) -c $< -o $@

#$(.IOFILES) : %.o : %.c
#	$(CC) $(ICFLAGS) -c $< -o $@
